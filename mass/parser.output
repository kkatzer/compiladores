Terminals which are not used

   T_IGNORE
   T_DOUBLE


State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 @1: /* empty */

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR list_ignore T_RPAR T_SEMICOLON block T_DOT

    3 list_ignore: T_IDENTIFIER
    4            | T_IDENTIFIER T_COMMA list_ignore

    5 @2: /* empty */

    6 @3: /* empty */

    7 block: label_declaration_part variable_declaration_part @2 routine_declaration_part @3 statement_part

    8 label_declaration_part: /* empty */
    9                       | T_LABEL label_list T_SEMICOLON

   10 label_list: label_identifier
   11           | label_list T_COMMA label_identifier

   12 label_identifier: T_INTEGER

   13 variable_declaration_part: /* empty */
   14                          | T_VAR variable_declaration_list T_SEMICOLON

   15 variable_declaration_list: variable_declaration
   16                          | variable_declaration_list T_SEMICOLON variable_declaration

   17 variable_declaration: T_VAR variable_list T_COLON T_IDENTIFIER
   18                     | variable_list T_COLON T_IDENTIFIER

   19 variable_list: variable_var
   20              | variable_var T_COMMA variable_list

   21 variable_var: T_IDENTIFIER

   22 routine_declaration_part: /* empty */
   23                         | routine_declaration_list T_SEMICOLON

   24 routine_declaration_list: routine_declaration
   25                         | routine_declaration_list T_SEMICOLON routine_declaration

   26 routine_declaration: procedure_declaration
   27                    | function_declaration

   28 procedure_declaration: procedure_heading T_SEMICOLON block

   29 procedure_heading: procedure_identification
   30                  | procedure_identification formal_parameter_section

   31 procedure_identification: T_PROCEDURE T_IDENTIFIER

   32 function_declaration: function_heading T_SEMICOLON block

   33 function_heading: function_identification T_COLON T_IDENTIFIER
   34                 | function_identification formal_parameter_section T_COLON T_IDENTIFIER

   35 function_identification: T_FUNCTION T_IDENTIFIER

   36 formal_parameter_section: T_LPAR formal_parameter_list T_RPAR

   37 formal_parameter_list: formal_parameter
   38                      | formal_parameter T_SEMICOLON formal_parameter_list

   39 formal_parameter: T_IDENTIFIER T_COLON T_IDENTIFIER
   40                 | T_VAR T_IDENTIFIER T_COLON T_IDENTIFIER

   41 statement_part: T_BEGIN statement_list T_END

   42 statement_list: statement
   43               | statement_list T_SEMICOLON statement

   44 statements: statement
   45           | statement_part

   46 statement: statement_nolabel

   47 @4: /* empty */

   48 statement: T_INTEGER T_COLON @4 statement_nolabel

   49 statement_nolabel: assignment
   50                  | call_noparams
   51                  | call
   52                  | goto
   53                  | read
   54                  | write
   55                  | condition
   56                  | while

   57 assignment: T_IDENTIFIER T_ASSIGNMENT expression

   58 call_noparams: T_IDENTIFIER

   59 @5: /* empty */

   60 call: T_IDENTIFIER @5 T_LPAR expression_list T_RPAR

   61 goto: T_GOTO T_INTEGER

   62 read: T_READ T_LPAR read_expression_list T_RPAR

   63 read_expression_list: read_expression
   64                     | read_expression T_COMMA read_expression_list

   65 @6: /* empty */

   66 read_expression: @6 T_IDENTIFIER

   67 write: T_WRITE T_LPAR write_expression_list T_RPAR

   68 write_expression_list: write_expression
   69                      | write_expression T_COMMA write_expression_list

   70 write_expression: expression

   71 condition: condition_if statements

   72 @7: /* empty */

   73 condition: condition_if statements T_ELSE @7 statements

   74 condition_if: T_IF expression T_THEN

   75 @8: /* empty */

   76 @9: /* empty */

   77 while: T_WHILE @8 expression T_DO @9 statements

   78 expression_list: expression

   79 @10: /* empty */

   80 expression_list: expression T_COMMA @10 expression_list

   81 expression: simple_expression
   82           | simple_expression relop simple_expression

   83 simple_expression: term
   84                  | simple_expression addop term

   85 term: factor
   86     | term mulop factor

   87 factor: T_IDENTIFIER
   88       | call
   89       | T_INTEGER
   90       | T_LPAR expression T_RPAR
   91       | T_NOT factor

   92 addop: T_PLUS
   93      | T_MINUS
   94      | T_OR

   95 mulop: T_STAR
   96      | T_DIV
   97      | T_AND

   98 relop: T_EQ
   99      | T_NEQ
  100      | T_LT
  101      | T_GT
  102      | T_LTE
  103      | T_GTE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IGNORE (258)
T_IDENTIFIER (259) 2 3 4 17 18 21 31 33 34 35 39 40 57 58 60 66 87
T_DOUBLE (260)
T_INTEGER (261) 12 48 61 89
T_EQ (262) 98
T_NEQ (263) 99
T_GTE (264) 103
T_GT (265) 101
T_LTE (266) 102
T_LT (267) 100
T_ASSIGNMENT (268) 57
T_LPAR (269) 2 36 60 62 67 90
T_RPAR (270) 2 36 60 62 67 90
T_DOT (271) 2
T_COMMA (272) 4 11 20 64 69 80
T_COLON (273) 17 18 33 34 39 40 48
T_SEMICOLON (274) 2 9 14 16 23 25 28 32 38 43
T_PLUS (275) 92
T_MINUS (276) 93
T_STAR (277) 95
T_DIV (278) 96
T_AND (279) 97
T_OR (280) 94
T_NOT (281) 91
T_PROGRAM (282) 2
T_BEGIN (283) 41
T_END (284) 41
T_LABEL (285) 9
T_VAR (286) 14 17 40
T_FUNCTION (287) 35
T_PROCEDURE (288) 31
T_IF (289) 74
T_THEN (290) 74
T_ELSE (291) 73
T_WHILE (292) 77
T_DO (293) 77
T_GOTO (294) 61
T_READ (295) 62
T_WRITE (296) 67


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 2, on right: 0
@1 (44)
    on left: 1, on right: 2
list_ignore (45)
    on left: 3 4, on right: 2 4
block (46)
    on left: 7, on right: 2 28 32
@2 (47)
    on left: 5, on right: 7
@3 (48)
    on left: 6, on right: 7
label_declaration_part (49)
    on left: 8 9, on right: 7
label_list (50)
    on left: 10 11, on right: 9 11
label_identifier (51)
    on left: 12, on right: 10 11
variable_declaration_part (52)
    on left: 13 14, on right: 7
variable_declaration_list (53)
    on left: 15 16, on right: 14 16
variable_declaration (54)
    on left: 17 18, on right: 15 16
variable_list (55)
    on left: 19 20, on right: 17 18 20
variable_var (56)
    on left: 21, on right: 19 20
routine_declaration_part (57)
    on left: 22 23, on right: 7
routine_declaration_list (58)
    on left: 24 25, on right: 23 25
routine_declaration (59)
    on left: 26 27, on right: 24 25
procedure_declaration (60)
    on left: 28, on right: 26
procedure_heading (61)
    on left: 29 30, on right: 28
procedure_identification (62)
    on left: 31, on right: 29 30
function_declaration (63)
    on left: 32, on right: 27
function_heading (64)
    on left: 33 34, on right: 32
function_identification (65)
    on left: 35, on right: 33 34
formal_parameter_section (66)
    on left: 36, on right: 30 34
formal_parameter_list (67)
    on left: 37 38, on right: 36 38
formal_parameter (68)
    on left: 39 40, on right: 37 38
statement_part (69)
    on left: 41, on right: 7 45
statement_list (70)
    on left: 42 43, on right: 41 43
statements (71)
    on left: 44 45, on right: 71 73 77
statement (72)
    on left: 46 48, on right: 42 43 44
@4 (73)
    on left: 47, on right: 48
statement_nolabel (74)
    on left: 49 50 51 52 53 54 55 56, on right: 46 48
assignment (75)
    on left: 57, on right: 49
call_noparams (76)
    on left: 58, on right: 50
call (77)
    on left: 60, on right: 51 88
@5 (78)
    on left: 59, on right: 60
goto (79)
    on left: 61, on right: 52
read (80)
    on left: 62, on right: 53
read_expression_list (81)
    on left: 63 64, on right: 62 64
read_expression (82)
    on left: 66, on right: 63 64
@6 (83)
    on left: 65, on right: 66
write (84)
    on left: 67, on right: 54
write_expression_list (85)
    on left: 68 69, on right: 67 69
write_expression (86)
    on left: 70, on right: 68 69
condition (87)
    on left: 71 73, on right: 55
@7 (88)
    on left: 72, on right: 73
condition_if (89)
    on left: 74, on right: 71 73
while (90)
    on left: 77, on right: 56
@8 (91)
    on left: 75, on right: 77
@9 (92)
    on left: 76, on right: 77
expression_list (93)
    on left: 78 80, on right: 60 80
@10 (94)
    on left: 79, on right: 80
expression (95)
    on left: 81 82, on right: 57 70 74 77 78 80 90
simple_expression (96)
    on left: 83 84, on right: 81 82 84
term (97)
    on left: 85 86, on right: 83 84 86
factor (98)
    on left: 87 88 89 90 91, on right: 85 86 91
addop (99)
    on left: 92 93 94, on right: 84
mulop (100)
    on left: 95 96 97, on right: 86
relop (101)
    on left: 98 99 100 101 102 103, on right: 82


state 0

    0 $accept: . program $end

    T_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    2 program: T_PROGRAM . T_IDENTIFIER @1 T_LPAR list_ignore T_RPAR T_SEMICOLON block T_DOT

    T_IDENTIFIER  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    2 program: T_PROGRAM T_IDENTIFIER . @1 T_LPAR list_ignore T_RPAR T_SEMICOLON block T_DOT

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    2 program: T_PROGRAM T_IDENTIFIER @1 . T_LPAR list_ignore T_RPAR T_SEMICOLON block T_DOT

    T_LPAR  shift, and go to state 6


state 6

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR . list_ignore T_RPAR T_SEMICOLON block T_DOT

    T_IDENTIFIER  shift, and go to state 7

    list_ignore  go to state 8


state 7

    3 list_ignore: T_IDENTIFIER .
    4            | T_IDENTIFIER . T_COMMA list_ignore

    T_COMMA  shift, and go to state 9

    $default  reduce using rule 3 (list_ignore)


state 8

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR list_ignore . T_RPAR T_SEMICOLON block T_DOT

    T_RPAR  shift, and go to state 10


state 9

    4 list_ignore: T_IDENTIFIER T_COMMA . list_ignore

    T_IDENTIFIER  shift, and go to state 7

    list_ignore  go to state 11


state 10

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR list_ignore T_RPAR . T_SEMICOLON block T_DOT

    T_SEMICOLON  shift, and go to state 12


state 11

    4 list_ignore: T_IDENTIFIER T_COMMA list_ignore .

    $default  reduce using rule 4 (list_ignore)


state 12

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR list_ignore T_RPAR T_SEMICOLON . block T_DOT

    T_LABEL  shift, and go to state 13

    $default  reduce using rule 8 (label_declaration_part)

    block                   go to state 14
    label_declaration_part  go to state 15


state 13

    9 label_declaration_part: T_LABEL . label_list T_SEMICOLON

    T_INTEGER  shift, and go to state 16

    label_list        go to state 17
    label_identifier  go to state 18


state 14

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR list_ignore T_RPAR T_SEMICOLON block . T_DOT

    T_DOT  shift, and go to state 19


state 15

    7 block: label_declaration_part . variable_declaration_part @2 routine_declaration_part @3 statement_part

    T_VAR  shift, and go to state 20

    $default  reduce using rule 13 (variable_declaration_part)

    variable_declaration_part  go to state 21


state 16

   12 label_identifier: T_INTEGER .

    $default  reduce using rule 12 (label_identifier)


state 17

    9 label_declaration_part: T_LABEL label_list . T_SEMICOLON
   11 label_list: label_list . T_COMMA label_identifier

    T_COMMA      shift, and go to state 22
    T_SEMICOLON  shift, and go to state 23


state 18

   10 label_list: label_identifier .

    $default  reduce using rule 10 (label_list)


state 19

    2 program: T_PROGRAM T_IDENTIFIER @1 T_LPAR list_ignore T_RPAR T_SEMICOLON block T_DOT .

    $default  reduce using rule 2 (program)


state 20

   14 variable_declaration_part: T_VAR . variable_declaration_list T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 24
    T_VAR         shift, and go to state 25

    variable_declaration_list  go to state 26
    variable_declaration       go to state 27
    variable_list              go to state 28
    variable_var               go to state 29


state 21

    7 block: label_declaration_part variable_declaration_part . @2 routine_declaration_part @3 statement_part

    $default  reduce using rule 5 (@2)

    @2  go to state 30


state 22

   11 label_list: label_list T_COMMA . label_identifier

    T_INTEGER  shift, and go to state 16

    label_identifier  go to state 31


state 23

    9 label_declaration_part: T_LABEL label_list T_SEMICOLON .

    $default  reduce using rule 9 (label_declaration_part)


state 24

   21 variable_var: T_IDENTIFIER .

    $default  reduce using rule 21 (variable_var)


state 25

   17 variable_declaration: T_VAR . variable_list T_COLON T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 24

    variable_list  go to state 32
    variable_var   go to state 29


state 26

   14 variable_declaration_part: T_VAR variable_declaration_list . T_SEMICOLON
   16 variable_declaration_list: variable_declaration_list . T_SEMICOLON variable_declaration

    T_SEMICOLON  shift, and go to state 33


state 27

   15 variable_declaration_list: variable_declaration .

    $default  reduce using rule 15 (variable_declaration_list)


state 28

   18 variable_declaration: variable_list . T_COLON T_IDENTIFIER

    T_COLON  shift, and go to state 34


state 29

   19 variable_list: variable_var .
   20              | variable_var . T_COMMA variable_list

    T_COMMA  shift, and go to state 35

    $default  reduce using rule 19 (variable_list)


state 30

    7 block: label_declaration_part variable_declaration_part @2 . routine_declaration_part @3 statement_part

    T_FUNCTION   shift, and go to state 36
    T_PROCEDURE  shift, and go to state 37

    $default  reduce using rule 22 (routine_declaration_part)

    routine_declaration_part  go to state 38
    routine_declaration_list  go to state 39
    routine_declaration       go to state 40
    procedure_declaration     go to state 41
    procedure_heading         go to state 42
    procedure_identification  go to state 43
    function_declaration      go to state 44
    function_heading          go to state 45
    function_identification   go to state 46


state 31

   11 label_list: label_list T_COMMA label_identifier .

    $default  reduce using rule 11 (label_list)


state 32

   17 variable_declaration: T_VAR variable_list . T_COLON T_IDENTIFIER

    T_COLON  shift, and go to state 47


state 33

   14 variable_declaration_part: T_VAR variable_declaration_list T_SEMICOLON .
   16 variable_declaration_list: variable_declaration_list T_SEMICOLON . variable_declaration

    T_IDENTIFIER  shift, and go to state 24
    T_VAR         shift, and go to state 25

    $default  reduce using rule 14 (variable_declaration_part)

    variable_declaration  go to state 48
    variable_list         go to state 28
    variable_var          go to state 29


state 34

   18 variable_declaration: variable_list T_COLON . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 49


state 35

   20 variable_list: variable_var T_COMMA . variable_list

    T_IDENTIFIER  shift, and go to state 24

    variable_list  go to state 50
    variable_var   go to state 29


state 36

   35 function_identification: T_FUNCTION . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 51


state 37

   31 procedure_identification: T_PROCEDURE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 52


state 38

    7 block: label_declaration_part variable_declaration_part @2 routine_declaration_part . @3 statement_part

    $default  reduce using rule 6 (@3)

    @3  go to state 53


state 39

   23 routine_declaration_part: routine_declaration_list . T_SEMICOLON
   25 routine_declaration_list: routine_declaration_list . T_SEMICOLON routine_declaration

    T_SEMICOLON  shift, and go to state 54


state 40

   24 routine_declaration_list: routine_declaration .

    $default  reduce using rule 24 (routine_declaration_list)


state 41

   26 routine_declaration: procedure_declaration .

    $default  reduce using rule 26 (routine_declaration)


state 42

   28 procedure_declaration: procedure_heading . T_SEMICOLON block

    T_SEMICOLON  shift, and go to state 55


state 43

   29 procedure_heading: procedure_identification .
   30                  | procedure_identification . formal_parameter_section

    T_LPAR  shift, and go to state 56

    $default  reduce using rule 29 (procedure_heading)

    formal_parameter_section  go to state 57


state 44

   27 routine_declaration: function_declaration .

    $default  reduce using rule 27 (routine_declaration)


state 45

   32 function_declaration: function_heading . T_SEMICOLON block

    T_SEMICOLON  shift, and go to state 58


state 46

   33 function_heading: function_identification . T_COLON T_IDENTIFIER
   34                 | function_identification . formal_parameter_section T_COLON T_IDENTIFIER

    T_LPAR   shift, and go to state 56
    T_COLON  shift, and go to state 59

    formal_parameter_section  go to state 60


state 47

   17 variable_declaration: T_VAR variable_list T_COLON . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 61


state 48

   16 variable_declaration_list: variable_declaration_list T_SEMICOLON variable_declaration .

    $default  reduce using rule 16 (variable_declaration_list)


state 49

   18 variable_declaration: variable_list T_COLON T_IDENTIFIER .

    $default  reduce using rule 18 (variable_declaration)


state 50

   20 variable_list: variable_var T_COMMA variable_list .

    $default  reduce using rule 20 (variable_list)


state 51

   35 function_identification: T_FUNCTION T_IDENTIFIER .

    $default  reduce using rule 35 (function_identification)


state 52

   31 procedure_identification: T_PROCEDURE T_IDENTIFIER .

    $default  reduce using rule 31 (procedure_identification)


state 53

    7 block: label_declaration_part variable_declaration_part @2 routine_declaration_part @3 . statement_part

    T_BEGIN  shift, and go to state 62

    statement_part  go to state 63


state 54

   23 routine_declaration_part: routine_declaration_list T_SEMICOLON .
   25 routine_declaration_list: routine_declaration_list T_SEMICOLON . routine_declaration

    T_FUNCTION   shift, and go to state 36
    T_PROCEDURE  shift, and go to state 37

    $default  reduce using rule 23 (routine_declaration_part)

    routine_declaration       go to state 64
    procedure_declaration     go to state 41
    procedure_heading         go to state 42
    procedure_identification  go to state 43
    function_declaration      go to state 44
    function_heading          go to state 45
    function_identification   go to state 46


state 55

   28 procedure_declaration: procedure_heading T_SEMICOLON . block

    T_LABEL  shift, and go to state 13

    $default  reduce using rule 8 (label_declaration_part)

    block                   go to state 65
    label_declaration_part  go to state 15


state 56

   36 formal_parameter_section: T_LPAR . formal_parameter_list T_RPAR

    T_IDENTIFIER  shift, and go to state 66
    T_VAR         shift, and go to state 67

    formal_parameter_list  go to state 68
    formal_parameter       go to state 69


state 57

   30 procedure_heading: procedure_identification formal_parameter_section .

    $default  reduce using rule 30 (procedure_heading)


state 58

   32 function_declaration: function_heading T_SEMICOLON . block

    T_LABEL  shift, and go to state 13

    $default  reduce using rule 8 (label_declaration_part)

    block                   go to state 70
    label_declaration_part  go to state 15


state 59

   33 function_heading: function_identification T_COLON . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 71


state 60

   34 function_heading: function_identification formal_parameter_section . T_COLON T_IDENTIFIER

    T_COLON  shift, and go to state 72


state 61

   17 variable_declaration: T_VAR variable_list T_COLON T_IDENTIFIER .

    $default  reduce using rule 17 (variable_declaration)


state 62

   41 statement_part: T_BEGIN . statement_list T_END

    T_IDENTIFIER  shift, and go to state 73
    T_INTEGER     shift, and go to state 74
    T_IF          shift, and go to state 75
    T_WHILE       shift, and go to state 76
    T_GOTO        shift, and go to state 77
    T_READ        shift, and go to state 78
    T_WRITE       shift, and go to state 79

    statement_list     go to state 80
    statement          go to state 81
    statement_nolabel  go to state 82
    assignment         go to state 83
    call_noparams      go to state 84
    call               go to state 85
    goto               go to state 86
    read               go to state 87
    write              go to state 88
    condition          go to state 89
    condition_if       go to state 90
    while              go to state 91


state 63

    7 block: label_declaration_part variable_declaration_part @2 routine_declaration_part @3 statement_part .

    $default  reduce using rule 7 (block)


state 64

   25 routine_declaration_list: routine_declaration_list T_SEMICOLON routine_declaration .

    $default  reduce using rule 25 (routine_declaration_list)


state 65

   28 procedure_declaration: procedure_heading T_SEMICOLON block .

    $default  reduce using rule 28 (procedure_declaration)


state 66

   39 formal_parameter: T_IDENTIFIER . T_COLON T_IDENTIFIER

    T_COLON  shift, and go to state 92


state 67

   40 formal_parameter: T_VAR . T_IDENTIFIER T_COLON T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 93


state 68

   36 formal_parameter_section: T_LPAR formal_parameter_list . T_RPAR

    T_RPAR  shift, and go to state 94


state 69

   37 formal_parameter_list: formal_parameter .
   38                      | formal_parameter . T_SEMICOLON formal_parameter_list

    T_SEMICOLON  shift, and go to state 95

    $default  reduce using rule 37 (formal_parameter_list)


state 70

   32 function_declaration: function_heading T_SEMICOLON block .

    $default  reduce using rule 32 (function_declaration)


state 71

   33 function_heading: function_identification T_COLON T_IDENTIFIER .

    $default  reduce using rule 33 (function_heading)


state 72

   34 function_heading: function_identification formal_parameter_section T_COLON . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 96


state 73

   57 assignment: T_IDENTIFIER . T_ASSIGNMENT expression
   58 call_noparams: T_IDENTIFIER .
   60 call: T_IDENTIFIER . @5 T_LPAR expression_list T_RPAR

    T_ASSIGNMENT  shift, and go to state 97

    T_LPAR    reduce using rule 59 (@5)
    $default  reduce using rule 58 (call_noparams)

    @5  go to state 98


state 74

   48 statement: T_INTEGER . T_COLON @4 statement_nolabel

    T_COLON  shift, and go to state 99


state 75

   74 condition_if: T_IF . expression T_THEN

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    expression         go to state 105
    simple_expression  go to state 106
    term               go to state 107
    factor             go to state 108


state 76

   77 while: T_WHILE . @8 expression T_DO @9 statements

    $default  reduce using rule 75 (@8)

    @8  go to state 109


state 77

   61 goto: T_GOTO . T_INTEGER

    T_INTEGER  shift, and go to state 110


state 78

   62 read: T_READ . T_LPAR read_expression_list T_RPAR

    T_LPAR  shift, and go to state 111


state 79

   67 write: T_WRITE . T_LPAR write_expression_list T_RPAR

    T_LPAR  shift, and go to state 112


state 80

   41 statement_part: T_BEGIN statement_list . T_END
   43 statement_list: statement_list . T_SEMICOLON statement

    T_SEMICOLON  shift, and go to state 113
    T_END        shift, and go to state 114


state 81

   42 statement_list: statement .

    $default  reduce using rule 42 (statement_list)


state 82

   46 statement: statement_nolabel .

    $default  reduce using rule 46 (statement)


state 83

   49 statement_nolabel: assignment .

    $default  reduce using rule 49 (statement_nolabel)


state 84

   50 statement_nolabel: call_noparams .

    $default  reduce using rule 50 (statement_nolabel)


state 85

   51 statement_nolabel: call .

    $default  reduce using rule 51 (statement_nolabel)


state 86

   52 statement_nolabel: goto .

    $default  reduce using rule 52 (statement_nolabel)


state 87

   53 statement_nolabel: read .

    $default  reduce using rule 53 (statement_nolabel)


state 88

   54 statement_nolabel: write .

    $default  reduce using rule 54 (statement_nolabel)


state 89

   55 statement_nolabel: condition .

    $default  reduce using rule 55 (statement_nolabel)


state 90

   71 condition: condition_if . statements
   73          | condition_if . statements T_ELSE @7 statements

    T_IDENTIFIER  shift, and go to state 73
    T_INTEGER     shift, and go to state 74
    T_BEGIN       shift, and go to state 62
    T_IF          shift, and go to state 75
    T_WHILE       shift, and go to state 76
    T_GOTO        shift, and go to state 77
    T_READ        shift, and go to state 78
    T_WRITE       shift, and go to state 79

    statement_part     go to state 115
    statements         go to state 116
    statement          go to state 117
    statement_nolabel  go to state 82
    assignment         go to state 83
    call_noparams      go to state 84
    call               go to state 85
    goto               go to state 86
    read               go to state 87
    write              go to state 88
    condition          go to state 89
    condition_if       go to state 90
    while              go to state 91


state 91

   56 statement_nolabel: while .

    $default  reduce using rule 56 (statement_nolabel)


state 92

   39 formal_parameter: T_IDENTIFIER T_COLON . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 118


state 93

   40 formal_parameter: T_VAR T_IDENTIFIER . T_COLON T_IDENTIFIER

    T_COLON  shift, and go to state 119


state 94

   36 formal_parameter_section: T_LPAR formal_parameter_list T_RPAR .

    $default  reduce using rule 36 (formal_parameter_section)


state 95

   38 formal_parameter_list: formal_parameter T_SEMICOLON . formal_parameter_list

    T_IDENTIFIER  shift, and go to state 66
    T_VAR         shift, and go to state 67

    formal_parameter_list  go to state 120
    formal_parameter       go to state 69


state 96

   34 function_heading: function_identification formal_parameter_section T_COLON T_IDENTIFIER .

    $default  reduce using rule 34 (function_heading)


state 97

   57 assignment: T_IDENTIFIER T_ASSIGNMENT . expression

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    expression         go to state 121
    simple_expression  go to state 106
    term               go to state 107
    factor             go to state 108


state 98

   60 call: T_IDENTIFIER @5 . T_LPAR expression_list T_RPAR

    T_LPAR  shift, and go to state 122


state 99

   48 statement: T_INTEGER T_COLON . @4 statement_nolabel

    $default  reduce using rule 47 (@4)

    @4  go to state 123


state 100

   60 call: T_IDENTIFIER . @5 T_LPAR expression_list T_RPAR
   87 factor: T_IDENTIFIER .

    T_LPAR    reduce using rule 59 (@5)
    $default  reduce using rule 87 (factor)

    @5  go to state 98


state 101

   89 factor: T_INTEGER .

    $default  reduce using rule 89 (factor)


state 102

   90 factor: T_LPAR . expression T_RPAR

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    expression         go to state 124
    simple_expression  go to state 106
    term               go to state 107
    factor             go to state 108


state 103

   91 factor: T_NOT . factor

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call    go to state 104
    factor  go to state 125


state 104

   88 factor: call .

    $default  reduce using rule 88 (factor)


state 105

   74 condition_if: T_IF expression . T_THEN

    T_THEN  shift, and go to state 126


state 106

   81 expression: simple_expression .
   82           | simple_expression . relop simple_expression
   84 simple_expression: simple_expression . addop term

    T_EQ     shift, and go to state 127
    T_NEQ    shift, and go to state 128
    T_GTE    shift, and go to state 129
    T_GT     shift, and go to state 130
    T_LTE    shift, and go to state 131
    T_LT     shift, and go to state 132
    T_PLUS   shift, and go to state 133
    T_MINUS  shift, and go to state 134
    T_OR     shift, and go to state 135

    $default  reduce using rule 81 (expression)

    addop  go to state 136
    relop  go to state 137


state 107

   83 simple_expression: term .
   86 term: term . mulop factor

    T_STAR  shift, and go to state 138
    T_DIV   shift, and go to state 139
    T_AND   shift, and go to state 140

    $default  reduce using rule 83 (simple_expression)

    mulop  go to state 141


state 108

   85 term: factor .

    $default  reduce using rule 85 (term)


state 109

   77 while: T_WHILE @8 . expression T_DO @9 statements

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    expression         go to state 142
    simple_expression  go to state 106
    term               go to state 107
    factor             go to state 108


state 110

   61 goto: T_GOTO T_INTEGER .

    $default  reduce using rule 61 (goto)


state 111

   62 read: T_READ T_LPAR . read_expression_list T_RPAR

    $default  reduce using rule 65 (@6)

    read_expression_list  go to state 143
    read_expression       go to state 144
    @6                    go to state 145


state 112

   67 write: T_WRITE T_LPAR . write_expression_list T_RPAR

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call                   go to state 104
    write_expression_list  go to state 146
    write_expression       go to state 147
    expression             go to state 148
    simple_expression      go to state 106
    term                   go to state 107
    factor                 go to state 108


state 113

   43 statement_list: statement_list T_SEMICOLON . statement

    T_IDENTIFIER  shift, and go to state 73
    T_INTEGER     shift, and go to state 74
    T_IF          shift, and go to state 75
    T_WHILE       shift, and go to state 76
    T_GOTO        shift, and go to state 77
    T_READ        shift, and go to state 78
    T_WRITE       shift, and go to state 79

    statement          go to state 149
    statement_nolabel  go to state 82
    assignment         go to state 83
    call_noparams      go to state 84
    call               go to state 85
    goto               go to state 86
    read               go to state 87
    write              go to state 88
    condition          go to state 89
    condition_if       go to state 90
    while              go to state 91


state 114

   41 statement_part: T_BEGIN statement_list T_END .

    $default  reduce using rule 41 (statement_part)


state 115

   45 statements: statement_part .

    $default  reduce using rule 45 (statements)


state 116

   71 condition: condition_if statements .
   73          | condition_if statements . T_ELSE @7 statements

    T_ELSE  shift, and go to state 150

    T_ELSE    [reduce using rule 71 (condition)]
    $default  reduce using rule 71 (condition)


state 117

   44 statements: statement .

    $default  reduce using rule 44 (statements)


state 118

   39 formal_parameter: T_IDENTIFIER T_COLON T_IDENTIFIER .

    $default  reduce using rule 39 (formal_parameter)


state 119

   40 formal_parameter: T_VAR T_IDENTIFIER T_COLON . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 151


state 120

   38 formal_parameter_list: formal_parameter T_SEMICOLON formal_parameter_list .

    $default  reduce using rule 38 (formal_parameter_list)


state 121

   57 assignment: T_IDENTIFIER T_ASSIGNMENT expression .

    $default  reduce using rule 57 (assignment)


state 122

   60 call: T_IDENTIFIER @5 T_LPAR . expression_list T_RPAR

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    expression_list    go to state 152
    expression         go to state 153
    simple_expression  go to state 106
    term               go to state 107
    factor             go to state 108


state 123

   48 statement: T_INTEGER T_COLON @4 . statement_nolabel

    T_IDENTIFIER  shift, and go to state 73
    T_IF          shift, and go to state 75
    T_WHILE       shift, and go to state 76
    T_GOTO        shift, and go to state 77
    T_READ        shift, and go to state 78
    T_WRITE       shift, and go to state 79

    statement_nolabel  go to state 154
    assignment         go to state 83
    call_noparams      go to state 84
    call               go to state 85
    goto               go to state 86
    read               go to state 87
    write              go to state 88
    condition          go to state 89
    condition_if       go to state 90
    while              go to state 91


state 124

   90 factor: T_LPAR expression . T_RPAR

    T_RPAR  shift, and go to state 155


state 125

   91 factor: T_NOT factor .

    $default  reduce using rule 91 (factor)


state 126

   74 condition_if: T_IF expression T_THEN .

    $default  reduce using rule 74 (condition_if)


state 127

   98 relop: T_EQ .

    $default  reduce using rule 98 (relop)


state 128

   99 relop: T_NEQ .

    $default  reduce using rule 99 (relop)


state 129

  103 relop: T_GTE .

    $default  reduce using rule 103 (relop)


state 130

  101 relop: T_GT .

    $default  reduce using rule 101 (relop)


state 131

  102 relop: T_LTE .

    $default  reduce using rule 102 (relop)


state 132

  100 relop: T_LT .

    $default  reduce using rule 100 (relop)


state 133

   92 addop: T_PLUS .

    $default  reduce using rule 92 (addop)


state 134

   93 addop: T_MINUS .

    $default  reduce using rule 93 (addop)


state 135

   94 addop: T_OR .

    $default  reduce using rule 94 (addop)


state 136

   84 simple_expression: simple_expression addop . term

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call    go to state 104
    term    go to state 156
    factor  go to state 108


state 137

   82 expression: simple_expression relop . simple_expression

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    simple_expression  go to state 157
    term               go to state 107
    factor             go to state 108


state 138

   95 mulop: T_STAR .

    $default  reduce using rule 95 (mulop)


state 139

   96 mulop: T_DIV .

    $default  reduce using rule 96 (mulop)


state 140

   97 mulop: T_AND .

    $default  reduce using rule 97 (mulop)


state 141

   86 term: term mulop . factor

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call    go to state 104
    factor  go to state 158


state 142

   77 while: T_WHILE @8 expression . T_DO @9 statements

    T_DO  shift, and go to state 159


state 143

   62 read: T_READ T_LPAR read_expression_list . T_RPAR

    T_RPAR  shift, and go to state 160


state 144

   63 read_expression_list: read_expression .
   64                     | read_expression . T_COMMA read_expression_list

    T_COMMA  shift, and go to state 161

    $default  reduce using rule 63 (read_expression_list)


state 145

   66 read_expression: @6 . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 162


state 146

   67 write: T_WRITE T_LPAR write_expression_list . T_RPAR

    T_RPAR  shift, and go to state 163


state 147

   68 write_expression_list: write_expression .
   69                      | write_expression . T_COMMA write_expression_list

    T_COMMA  shift, and go to state 164

    $default  reduce using rule 68 (write_expression_list)


state 148

   70 write_expression: expression .

    $default  reduce using rule 70 (write_expression)


state 149

   43 statement_list: statement_list T_SEMICOLON statement .

    $default  reduce using rule 43 (statement_list)


state 150

   73 condition: condition_if statements T_ELSE . @7 statements

    $default  reduce using rule 72 (@7)

    @7  go to state 165


state 151

   40 formal_parameter: T_VAR T_IDENTIFIER T_COLON T_IDENTIFIER .

    $default  reduce using rule 40 (formal_parameter)


state 152

   60 call: T_IDENTIFIER @5 T_LPAR expression_list . T_RPAR

    T_RPAR  shift, and go to state 166


state 153

   78 expression_list: expression .
   80                | expression . T_COMMA @10 expression_list

    T_COMMA  shift, and go to state 167

    $default  reduce using rule 78 (expression_list)


state 154

   48 statement: T_INTEGER T_COLON @4 statement_nolabel .

    $default  reduce using rule 48 (statement)


state 155

   90 factor: T_LPAR expression T_RPAR .

    $default  reduce using rule 90 (factor)


state 156

   84 simple_expression: simple_expression addop term .
   86 term: term . mulop factor

    T_STAR  shift, and go to state 138
    T_DIV   shift, and go to state 139
    T_AND   shift, and go to state 140

    $default  reduce using rule 84 (simple_expression)

    mulop  go to state 141


state 157

   82 expression: simple_expression relop simple_expression .
   84 simple_expression: simple_expression . addop term

    T_PLUS   shift, and go to state 133
    T_MINUS  shift, and go to state 134
    T_OR     shift, and go to state 135

    $default  reduce using rule 82 (expression)

    addop  go to state 136


state 158

   86 term: term mulop factor .

    $default  reduce using rule 86 (term)


state 159

   77 while: T_WHILE @8 expression T_DO . @9 statements

    $default  reduce using rule 76 (@9)

    @9  go to state 168


state 160

   62 read: T_READ T_LPAR read_expression_list T_RPAR .

    $default  reduce using rule 62 (read)


state 161

   64 read_expression_list: read_expression T_COMMA . read_expression_list

    $default  reduce using rule 65 (@6)

    read_expression_list  go to state 169
    read_expression       go to state 144
    @6                    go to state 145


state 162

   66 read_expression: @6 T_IDENTIFIER .

    $default  reduce using rule 66 (read_expression)


state 163

   67 write: T_WRITE T_LPAR write_expression_list T_RPAR .

    $default  reduce using rule 67 (write)


state 164

   69 write_expression_list: write_expression T_COMMA . write_expression_list

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call                   go to state 104
    write_expression_list  go to state 170
    write_expression       go to state 147
    expression             go to state 148
    simple_expression      go to state 106
    term                   go to state 107
    factor                 go to state 108


state 165

   73 condition: condition_if statements T_ELSE @7 . statements

    T_IDENTIFIER  shift, and go to state 73
    T_INTEGER     shift, and go to state 74
    T_BEGIN       shift, and go to state 62
    T_IF          shift, and go to state 75
    T_WHILE       shift, and go to state 76
    T_GOTO        shift, and go to state 77
    T_READ        shift, and go to state 78
    T_WRITE       shift, and go to state 79

    statement_part     go to state 115
    statements         go to state 171
    statement          go to state 117
    statement_nolabel  go to state 82
    assignment         go to state 83
    call_noparams      go to state 84
    call               go to state 85
    goto               go to state 86
    read               go to state 87
    write              go to state 88
    condition          go to state 89
    condition_if       go to state 90
    while              go to state 91


state 166

   60 call: T_IDENTIFIER @5 T_LPAR expression_list T_RPAR .

    $default  reduce using rule 60 (call)


state 167

   80 expression_list: expression T_COMMA . @10 expression_list

    $default  reduce using rule 79 (@10)

    @10  go to state 172


state 168

   77 while: T_WHILE @8 expression T_DO @9 . statements

    T_IDENTIFIER  shift, and go to state 73
    T_INTEGER     shift, and go to state 74
    T_BEGIN       shift, and go to state 62
    T_IF          shift, and go to state 75
    T_WHILE       shift, and go to state 76
    T_GOTO        shift, and go to state 77
    T_READ        shift, and go to state 78
    T_WRITE       shift, and go to state 79

    statement_part     go to state 115
    statements         go to state 173
    statement          go to state 117
    statement_nolabel  go to state 82
    assignment         go to state 83
    call_noparams      go to state 84
    call               go to state 85
    goto               go to state 86
    read               go to state 87
    write              go to state 88
    condition          go to state 89
    condition_if       go to state 90
    while              go to state 91


state 169

   64 read_expression_list: read_expression T_COMMA read_expression_list .

    $default  reduce using rule 64 (read_expression_list)


state 170

   69 write_expression_list: write_expression T_COMMA write_expression_list .

    $default  reduce using rule 69 (write_expression_list)


state 171

   73 condition: condition_if statements T_ELSE @7 statements .

    $default  reduce using rule 73 (condition)


state 172

   80 expression_list: expression T_COMMA @10 . expression_list

    T_IDENTIFIER  shift, and go to state 100
    T_INTEGER     shift, and go to state 101
    T_LPAR        shift, and go to state 102
    T_NOT         shift, and go to state 103

    call               go to state 104
    expression_list    go to state 174
    expression         go to state 153
    simple_expression  go to state 106
    term               go to state 107
    factor             go to state 108


state 173

   77 while: T_WHILE @8 expression T_DO @9 statements .

    $default  reduce using rule 77 (while)


state 174

   80 expression_list: expression T_COMMA @10 expression_list .

    $default  reduce using rule 80 (expression_list)
