Useless nonterminals

   addop
   mulop


Terminals which are not used

   LABEL
   TYPE
   ARRAY
   OF
   PROCEDURE
   FUNCTION
   GOTO
   IF
   THEN
   ELSE
   WHILE
   DO
   MAIS
   MENOS
   OR
   MULTIPLICACAO
   DIV
   AND
   NOT


Useless rules

   47 addop: MAIS
   48      | MENOS
   49      | OR

   50 mulop: MULTIPLICACAO
   51      | DIV
   52      | AND


Rules never reduced

   31 call: /* empty */

   32 read: /* empty */

   33 write: /* empty */

   34 condition: /* empty */

   35 while: /* empty */


State 20 conflicts: 2 reduce/reduce
State 39 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 @1: /* empty */

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    3 @2: /* empty */

    4 bloco: parte_declara_vars @2 comando_composto

    5 parte_declara_vars: var

    6 @3: /* empty */

    7 var: @3 VAR declara_vars
    8    | /* empty */

    9 declara_vars: declara_vars declara_var
   10             | declara_var

   11 @4: /* empty */

   12 @5: /* empty */

   13 declara_var: @4 lista_id_var DOIS_PONTOS tipo @5 PONTO_E_VIRGULA

   14 tipo: IDENT

   15 lista_id_var: lista_id_var VIRGULA IDENT
   16             | IDENT

   17 lista_idents: lista_idents VIRGULA IDENT
   18             | IDENT

   19 comando_composto: T_BEGIN comandos T_END

   20 comandos: comando
   21         | comandos PONTO_E_VIRGULA comando

   22 comando: atribuicao
   23        | call_noparams
   24        | call
   25        | read
   26        | write
   27        | condition
   28        | while

   29 atribuicao: IDENT ATRIBUICAO expression

   30 call_noparams: /* empty */

   31 call: /* empty */

   32 read: /* empty */

   33 write: /* empty */

   34 condition: /* empty */

   35 while: /* empty */

   36 expression: simple_expression
   37           | simple_expression relop simple_expression

   38 simple_expression: term

   39 term: factor

   40 factor: NUMERO

   41 relop: IGUAL
   42      | NIGUAL
   43      | MEIGUAL
   44      | MAIGUAL
   45      | MENOR
   46      | MAIOR


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2
ABRE_PARENTESES (259) 2
FECHA_PARENTESES (260) 2
VIRGULA (261) 15 17
PONTO_E_VIRGULA (262) 2 13 21
DOIS_PONTOS (263) 13
PONTO (264) 2
T_BEGIN (265) 19
T_END (266) 19
VAR (267) 7
IDENT (268) 2 14 15 16 17 18 29
ATRIBUICAO (269) 29
LABEL (270)
TYPE (271)
ARRAY (272)
OF (273)
PROCEDURE (274)
FUNCTION (275)
GOTO (276)
IF (277)
THEN (278)
ELSE (279)
WHILE (280)
DO (281)
MAIS (282)
MENOS (283)
OR (284)
MULTIPLICACAO (285)
DIV (286)
AND (287)
NOT (288)
NUMERO (289) 40
IGUAL (290) 41
MAIGUAL (291) 44
MEIGUAL (292) 43
MAIOR (293) 46
MENOR (294) 45
NIGUAL (295) 42


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 2, on right: 0
@1 (43)
    on left: 1, on right: 2
bloco (44)
    on left: 4, on right: 2
@2 (45)
    on left: 3, on right: 4
parte_declara_vars (46)
    on left: 5, on right: 4
var (47)
    on left: 7 8, on right: 5
@3 (48)
    on left: 6, on right: 7
declara_vars (49)
    on left: 9 10, on right: 7 9
declara_var (50)
    on left: 13, on right: 9 10
@4 (51)
    on left: 11, on right: 13
@5 (52)
    on left: 12, on right: 13
tipo (53)
    on left: 14, on right: 13
lista_id_var (54)
    on left: 15 16, on right: 13 15
lista_idents (55)
    on left: 17 18, on right: 2 17
comando_composto (56)
    on left: 19, on right: 4
comandos (57)
    on left: 20 21, on right: 19 21
comando (58)
    on left: 22 23 24 25 26 27 28, on right: 20 21
atribuicao (59)
    on left: 29, on right: 22
call_noparams (60)
    on left: 30, on right: 23
call (61)
    on left: 31, on right: 24
read (62)
    on left: 32, on right: 25
write (63)
    on left: 33, on right: 26
condition (64)
    on left: 34, on right: 27
while (65)
    on left: 35, on right: 28
expression (66)
    on left: 36 37, on right: 29
simple_expression (67)
    on left: 38, on right: 36 37
term (68)
    on left: 39, on right: 38
factor (69)
    on left: 40, on right: 39
relop (70)
    on left: 41 42 43 44 45 46, on right: 37


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    2 program: PROGRAM . IDENT @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    2 program: PROGRAM IDENT . @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    2 program: PROGRAM IDENT @1 . ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    ABRE_PARENTESES  shift, and go to state 6


state 6

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES . lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 7

    lista_idents  go to state 8


state 7

   18 lista_idents: IDENT .

    $default  reduce using rule 18 (lista_idents)


state 8

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES lista_idents . FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO
   17 lista_idents: lista_idents . VIRGULA IDENT

    FECHA_PARENTESES  shift, and go to state 9
    VIRGULA           shift, and go to state 10


state 9

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES . PONTO_E_VIRGULA bloco PONTO

    PONTO_E_VIRGULA  shift, and go to state 11


state 10

   17 lista_idents: lista_idents VIRGULA . IDENT

    IDENT  shift, and go to state 12


state 11

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA . bloco PONTO

    T_BEGIN   reduce using rule 8 (var)
    $default  reduce using rule 6 (@3)

    bloco               go to state 13
    parte_declara_vars  go to state 14
    var                 go to state 15
    @3                  go to state 16


state 12

   17 lista_idents: lista_idents VIRGULA IDENT .

    $default  reduce using rule 17 (lista_idents)


state 13

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco . PONTO

    PONTO  shift, and go to state 17


state 14

    4 bloco: parte_declara_vars . @2 comando_composto

    $default  reduce using rule 3 (@2)

    @2  go to state 18


state 15

    5 parte_declara_vars: var .

    $default  reduce using rule 5 (parte_declara_vars)


state 16

    7 var: @3 . VAR declara_vars

    VAR  shift, and go to state 19


state 17

    2 program: PROGRAM IDENT @1 ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO .

    $default  reduce using rule 2 (program)


state 18

    4 bloco: parte_declara_vars @2 . comando_composto

    T_BEGIN  shift, and go to state 20

    comando_composto  go to state 21


state 19

    7 var: @3 VAR . declara_vars

    $default  reduce using rule 11 (@4)

    declara_vars  go to state 22
    declara_var   go to state 23
    @4            go to state 24


state 20

   19 comando_composto: T_BEGIN . comandos T_END

    IDENT  shift, and go to state 25

    PONTO_E_VIRGULA  reduce using rule 30 (call_noparams)
    PONTO_E_VIRGULA  [reduce using rule 31 (call)]
    PONTO_E_VIRGULA  [reduce using rule 32 (read)]
    PONTO_E_VIRGULA  [reduce using rule 33 (write)]
    PONTO_E_VIRGULA  [reduce using rule 34 (condition)]
    PONTO_E_VIRGULA  [reduce using rule 35 (while)]
    T_END            reduce using rule 30 (call_noparams)
    T_END            [reduce using rule 31 (call)]
    T_END            [reduce using rule 32 (read)]
    T_END            [reduce using rule 33 (write)]
    T_END            [reduce using rule 34 (condition)]
    T_END            [reduce using rule 35 (while)]
    $default         reduce using rule 30 (call_noparams)

    comandos       go to state 26
    comando        go to state 27
    atribuicao     go to state 28
    call_noparams  go to state 29
    call           go to state 30
    read           go to state 31
    write          go to state 32
    condition      go to state 33
    while          go to state 34


state 21

    4 bloco: parte_declara_vars @2 comando_composto .

    $default  reduce using rule 4 (bloco)


state 22

    7 var: @3 VAR declara_vars .
    9 declara_vars: declara_vars . declara_var

    IDENT     reduce using rule 11 (@4)
    $default  reduce using rule 7 (var)

    declara_var  go to state 35
    @4           go to state 24


state 23

   10 declara_vars: declara_var .

    $default  reduce using rule 10 (declara_vars)


state 24

   13 declara_var: @4 . lista_id_var DOIS_PONTOS tipo @5 PONTO_E_VIRGULA

    IDENT  shift, and go to state 36

    lista_id_var  go to state 37


state 25

   29 atribuicao: IDENT . ATRIBUICAO expression

    ATRIBUICAO  shift, and go to state 38


state 26

   19 comando_composto: T_BEGIN comandos . T_END
   21 comandos: comandos . PONTO_E_VIRGULA comando

    PONTO_E_VIRGULA  shift, and go to state 39
    T_END            shift, and go to state 40


state 27

   20 comandos: comando .

    $default  reduce using rule 20 (comandos)


state 28

   22 comando: atribuicao .

    $default  reduce using rule 22 (comando)


state 29

   23 comando: call_noparams .

    $default  reduce using rule 23 (comando)


state 30

   24 comando: call .

    $default  reduce using rule 24 (comando)


state 31

   25 comando: read .

    $default  reduce using rule 25 (comando)


state 32

   26 comando: write .

    $default  reduce using rule 26 (comando)


state 33

   27 comando: condition .

    $default  reduce using rule 27 (comando)


state 34

   28 comando: while .

    $default  reduce using rule 28 (comando)


state 35

    9 declara_vars: declara_vars declara_var .

    $default  reduce using rule 9 (declara_vars)


state 36

   16 lista_id_var: IDENT .

    $default  reduce using rule 16 (lista_id_var)


state 37

   13 declara_var: @4 lista_id_var . DOIS_PONTOS tipo @5 PONTO_E_VIRGULA
   15 lista_id_var: lista_id_var . VIRGULA IDENT

    VIRGULA      shift, and go to state 41
    DOIS_PONTOS  shift, and go to state 42


state 38

   29 atribuicao: IDENT ATRIBUICAO . expression

    NUMERO  shift, and go to state 43

    expression         go to state 44
    simple_expression  go to state 45
    term               go to state 46
    factor             go to state 47


state 39

   21 comandos: comandos PONTO_E_VIRGULA . comando

    IDENT  shift, and go to state 25

    PONTO_E_VIRGULA  reduce using rule 30 (call_noparams)
    PONTO_E_VIRGULA  [reduce using rule 31 (call)]
    PONTO_E_VIRGULA  [reduce using rule 32 (read)]
    PONTO_E_VIRGULA  [reduce using rule 33 (write)]
    PONTO_E_VIRGULA  [reduce using rule 34 (condition)]
    PONTO_E_VIRGULA  [reduce using rule 35 (while)]
    T_END            reduce using rule 30 (call_noparams)
    T_END            [reduce using rule 31 (call)]
    T_END            [reduce using rule 32 (read)]
    T_END            [reduce using rule 33 (write)]
    T_END            [reduce using rule 34 (condition)]
    T_END            [reduce using rule 35 (while)]
    $default         reduce using rule 30 (call_noparams)

    comando        go to state 48
    atribuicao     go to state 28
    call_noparams  go to state 29
    call           go to state 30
    read           go to state 31
    write          go to state 32
    condition      go to state 33
    while          go to state 34


state 40

   19 comando_composto: T_BEGIN comandos T_END .

    $default  reduce using rule 19 (comando_composto)


state 41

   15 lista_id_var: lista_id_var VIRGULA . IDENT

    IDENT  shift, and go to state 49


state 42

   13 declara_var: @4 lista_id_var DOIS_PONTOS . tipo @5 PONTO_E_VIRGULA

    IDENT  shift, and go to state 50

    tipo  go to state 51


state 43

   40 factor: NUMERO .

    $default  reduce using rule 40 (factor)


state 44

   29 atribuicao: IDENT ATRIBUICAO expression .

    $default  reduce using rule 29 (atribuicao)


state 45

   36 expression: simple_expression .
   37           | simple_expression . relop simple_expression

    IGUAL    shift, and go to state 52
    MAIGUAL  shift, and go to state 53
    MEIGUAL  shift, and go to state 54
    MAIOR    shift, and go to state 55
    MENOR    shift, and go to state 56
    NIGUAL   shift, and go to state 57

    $default  reduce using rule 36 (expression)

    relop  go to state 58


state 46

   38 simple_expression: term .

    $default  reduce using rule 38 (simple_expression)


state 47

   39 term: factor .

    $default  reduce using rule 39 (term)


state 48

   21 comandos: comandos PONTO_E_VIRGULA comando .

    $default  reduce using rule 21 (comandos)


state 49

   15 lista_id_var: lista_id_var VIRGULA IDENT .

    $default  reduce using rule 15 (lista_id_var)


state 50

   14 tipo: IDENT .

    $default  reduce using rule 14 (tipo)


state 51

   13 declara_var: @4 lista_id_var DOIS_PONTOS tipo . @5 PONTO_E_VIRGULA

    $default  reduce using rule 12 (@5)

    @5  go to state 59


state 52

   41 relop: IGUAL .

    $default  reduce using rule 41 (relop)


state 53

   44 relop: MAIGUAL .

    $default  reduce using rule 44 (relop)


state 54

   43 relop: MEIGUAL .

    $default  reduce using rule 43 (relop)


state 55

   46 relop: MAIOR .

    $default  reduce using rule 46 (relop)


state 56

   45 relop: MENOR .

    $default  reduce using rule 45 (relop)


state 57

   42 relop: NIGUAL .

    $default  reduce using rule 42 (relop)


state 58

   37 expression: simple_expression relop . simple_expression

    NUMERO  shift, and go to state 43

    simple_expression  go to state 60
    term               go to state 46
    factor             go to state 47


state 59

   13 declara_var: @4 lista_id_var DOIS_PONTOS tipo @5 . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 61


state 60

   37 expression: simple_expression relop simple_expression .

    $default  reduce using rule 37 (expression)


state 61

   13 declara_var: @4 lista_id_var DOIS_PONTOS tipo @5 PONTO_E_VIRGULA .

    $default  reduce using rule 13 (declara_var)
